---
interface Project {
    id: number;
    name: string;
    slug: string;
    targetURL: string;
    excerpt: string;
    thumbnailImage: string;
    toolsUsed: string[];
    role: string;
    year: number;
    isWIP: boolean;
}

const projects: Project[] = [
    {
        id: 1,
        name: "Przedszkole Calineczka",
        slug: "/project/przedszkole-calineczka",
        targetURL: "https://edukacjajutra.eu/przedszkole-calineczka-gdansk/",
        excerpt:
            "Projekt w kolaboracji z GravityOFF. Moja rola: Utworzenie projektu graficznego dla przedszkola Calineczka w Gdańsku.",
        thumbnailImage: "/assets/projects/1/thumbnail.jpeg",
        toolsUsed: ["Figma"],
        role: "Design",
        year: 2022,
        isWIP: false,
    },
    {
        id: 2,
        name: "Piryt Nieruchomości",
        slug: "/project/piryt-nieruchomosci",
        targetURL: "https://pirytnieruchomosci.pl/",
        excerpt:
            "Projekt graficzny strony internetowej został przeze mnie rozbudowany i dostosowany do potrzeb klienta. Wdrożenie zostało zrealizowane przy użyciu Webflow.",
        thumbnailImage: "/assets/projects/2/thumbnail.jpeg",
        toolsUsed: ["Figma", "Webflow", "Make/Integromat", "EstiCRM", "API"],
        role: "Development",
        year: 2024,
        isWIP: false,
    },
    {
        id: 3,
        name: "Portfolio",
        slug: "/project/portfolio",
        targetURL: "https://sultanowski.com",
        excerpt: "Showcase moich prac i umiejętności.",
        thumbnailImage: "/assets/projects/3/thumbnail.jpeg",
        toolsUsed: ["Figma", "AstroJS", "Swiper", "TailwindCSS"],
        role: "Design / Development",
        year: 2025,
        isWIP: true,
    },
    {
        id: 4,
        name: "No-Code Poland",
        slug: "/project/nocodepoland",
        targetURL: "https://nocodepoland.com/",
        excerpt:
            "Zaprojektowałem logo No-Code Poland, które jest wykorzystywane na stronie internetowej oraz w materialach promocyjnych.",
        thumbnailImage: "/assets/projects/4/thumbnail.jpeg",
        toolsUsed: ["Figma", "Webflow", "MailerLite"],
        role: "Co-Founder / Design / Development",
        year: 2024,
        isWIP: false,
    },
];
---

<div class="flex flex-col xl:flex-row items-end justify-between gap-8">
    <div class="swiper main xl:order-2 !m-0 xl:!overflow-visible">
        <div
            class="swiper-wrapper w-full xl:max-w-[40rem] max-h-[16rem] md:max-h-[25rem]"
        >
            {
                projects.map((project) => (
                    <div class="swiper-slide">
                        <a href={project.targetURL}>
                            <img src={project.thumbnailImage} />
                        </a>
                    </div>
                ))
            }
        </div>
    </div>
    <div class="swiper meta xl:order-1 !m-0 w-full xl:max-w-[40rem]">
        <div class="swiper-wrapper">
            {
                projects.map((project) => (
                    <div class="swiper-slide !flex flex-col gap-4">
                        <div class="flex justify-between items-center">
                            <div class="flex gap-2">
                                <p class="text-xl font-bold text-blue-600">
                                    {project.name} ({project.year})
                                </p>
                                {project.isWIP && (
                                    <span class="font-mono bg-orange-500 text-orange-100 p-2 text-xs">
                                        WIP!
                                    </span>
                                )}
                            </div>
                            <p class="text-blue-600">{project.role}</p>
                        </div>
                        <div class="flex flex-wrap gap-2">
                            {project.toolsUsed &&
                                project.toolsUsed.map((tool) => (
                                    <p class="btn-sm">{tool}</p>
                                ))}
                        </div>
                        <p class="text-blue-600">{project.excerpt}</p>
                    </div>
                ))
            }
        </div>
        <div class="flex justify-between mt-4">
            <a href="#" class="swiper-button-prev btn-sm">&#60; prev</a>
            <a href="#" class="swiper-button-next btn-sm">next &#62;</a>
        </div>
    </div>
</div>

<style scoped>
    @reference '../styles/global.css';
    .btn-sm {
        @apply bg-blue-600 text-white px-2 py-1 w-fit font-mono text-xs;
    }
    .swiper-button-next,
    .swiper-button-prev {
        @apply relative m-0 right-0 left-0 h-auto;
    }

    .swiper-button-prev::after,
    .swiper-button-next::after {
        display: none;
    }
</style>

<script>
    import Swiper from "swiper";
    import { Navigation, EffectFade } from "swiper/modules";
    import "swiper/css";
    import "swiper/css/navigation";
    import "swiper/css/effect-fade";

    const main = new Swiper(".swiper.main", {
        modules: [Navigation],
        direction: "vertical",
        allowTouchMove: false,
        navigation: {
            nextEl: ".swiper-button-next",
            prevEl: ".swiper-button-prev",
        },
    });

    const meta = new Swiper(".swiper.meta", {
        modules: [Navigation, EffectFade],
        slidesPerView: 1,
        effect: "fade",
        speed: 500,
        fadeEffect: {
            crossFade: true,
        },
        navigation: {
            nextEl: ".swiper-button-next",
            prevEl: ".swiper-button-prev",
        },
    });

    main.on("init", function () {
        main.controller.control = meta;
    });

    meta.on("init", function () {
        meta.controller.control = main;
    });

    // Initialize both swipers
    main.init();
    meta.init();
</script>
